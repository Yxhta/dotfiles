if &compatible
  set nocompatible
end

function! s:SourceConfigFilesIn(directory)
  let directory_splat = '~/.vim/' . a:directory . '/*'
  for config_file in split(glob(directory_splat), '\n')
    if filereadable(config_file)
      execute 'source' config_file
    endif
  endfor
endfunction

let g:has_async = v:version >= 800 || has('nvim')

call plug#begin('~/.vim/bundle')
call s:SourceConfigFilesIn('rcplugins')
" Define bundles via Github repos
" Plug 'christoomey/vim-run-interactive'
" Plug 'ctrlpvim/ctrlp.vim'
" Plug 'elixir-lang/vim-elixir'
" Plug 'fatih/vim-go'
Plug 'janko-m/vim-test'
" Plug 'pangloss/vim-javascript'
Plug 'pbrisbin/vim-mkdir'
Plug 'slim-template/vim-slim'
Plug 'tpope/vim-bundler'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-projectionist'
Plug 'tpope/vim-rails'
Plug 'tpope/vim-rake'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-rhubarb'
Plug 'tpope/vim-surround'
Plug 'vim-ruby/vim-ruby'
Plug 'vim-scripts/tComment'
Plug 'jparise/vim-graphql'
"Plug 'mxw/vim-jsx'
Plug 'cocopon/iceberg.vim'
Plug 'w0ng/vim-hybrid'
Plug 'whatyouhide/vim-gotham'
Plug 'dracula/vim', { 'as': 'dracula' }
" Plug 'vim-airline/vim-airline'
Plug 'itchyny/lightline.vim'
Plug 'scrooloose/nerdtree'
Plug 'ryanoasis/vim-devicons'
Plug 'editorconfig/editorconfig-vim'
Plug '/usr/local/opt/fzf'
Plug 'junegunn/fzf.vim'
Plug 'styled-components/vim-styled-components', { 'branch': 'main' }
Plug 'othree/yajs.vim'
Plug 'maxmellon/vim-jsx-pretty'

Plug 'w0rp/ale'
let g:ale_linters = {
      \ 'javascript': ['eslint']
      \ }

nmap <silent> [r <Plug>(ale_previous_wrap)
nmap <silent> ]r <Plug>(ale_next_wrap)

" Linting on all changes felt too aggressive. The below settings calls lint on
" certain events, either when I stop interacting or when entering / leaving
" insert mode
set updatetime=1000
let g:ale_lint_on_text_changed = 0

call plug#end()

call s:SourceConfigFilesIn('rcfiles')
